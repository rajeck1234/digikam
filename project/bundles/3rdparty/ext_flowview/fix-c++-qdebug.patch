diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
index d2fe367..f50c3a7 100644
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -4,7 +4,6 @@
 # Redistribution and use is allowed according to the terms of the BSD license.
 # For details see the accompanying COPYING-CMAKE-SCRIPTS file.
 
-set(CMAKE_CXX_STANDARD 20)
 set(CMAKE_AUTOMOC ON)
 
 # set QT_VERSION_MAJOR
diff --git a/src/picdialog.cpp b/src/picdialog.cpp
index e5b6040..18e4788 100644
--- a/src/picdialog.cpp
+++ b/src/picdialog.cpp
@@ -23,13 +23,14 @@
 #include <QUrl>
 
 #include "aspectratiopixmaplabel.hpp"
-
-#define INSERT_CANCEL_POINT                   \
-    do {                                      \
-        if(stop_) {                           \
-            qDebug() << "Cancel load images"; \
-            return;                           \
-        }                                     \
+#include "digikam_debug.h"
+
+#define INSERT_CANCEL_POINT                                               \
+    do {                                                                  \
+        if(stop_) {                                                       \
+            qCDebug(DIGIKAM_DPLUGIN_GENERIC_LOG) << "Cancel load images"; \
+            return;                                                       \
+        }                                                                 \
     } while(0)
 
 #define POST_RESIZE_EVENT(obj) (qApp->postEvent(obj, new QResizeEvent(this->size(), this->size())))
@@ -95,7 +96,7 @@ void PicDialog::setStyle(Z::Style sty) {
 void PicDialog::add(LoadingDescription const& desc, DImg const& dimg) {
     qApp->processEvents();
     if(dimg.isNull()) {
-        qDebug() << "DImg " << desc.filePath << " load failed";
+        qCDebug(DIGIKAM_DPLUGIN_GENERIC_LOG) << "DImg " << desc.filePath << " load failed";
         return;
     }
     INSERT_CANCEL_POINT;
@@ -133,7 +134,7 @@ bool PicDialog::eventFilter(QObject* watched, QEvent* event) {
 
 void PicDialog::load(const QUrl& url, bool loadByPool) {
     INSERT_CANCEL_POINT;
-    qDebug() << "Load image: " << url.toLocalFile();
+    qCDebug(DIGIKAM_DPLUGIN_GENERIC_LOG) << "Load image: " << url.toLocalFile();
     if(!loadByPool) {
         if(!t_) {
             static PreviewLoadThread t;
@@ -161,7 +162,7 @@ void PicDialog::load(const QUrl& url, bool loadByPool) {
         imgReader.setAutoTransform(true);
         QPixmap pix = QPixmap::fromImage(imgReader.read());
         if(pix.isNull()) {
-            qDebug() << "Image " << url.toLocalFile() << " load failed";
+            qCDebug(DIGIKAM_DPLUGIN_GENERIC_LOG) << "Image " << url.toLocalFile() << " load failed";
             return;
         }
         INSERT_CANCEL_POINT;
diff --git a/src/plugflow.cpp b/src/plugflow.cpp
index 7fcb39e..7e18b7d 100644
--- a/src/plugflow.cpp
+++ b/src/plugflow.cpp
@@ -17,66 +17,17 @@
 #include <QInputDialog>
 #include <QMenu>
 
+#include "digikam_debug.h"
+
 #include "picdialog.hpp"
 #include "plugflow.hpp"
 #include "plugsettings.hpp"
 
 namespace Cathaysia {
 
-void logHandler(QtMsgType type, const QMessageLogContext& context, const QString& msg) {
-    QByteArray  localMsg = msg.toLocal8Bit();
-    const char* file     = context.file ? context.file : "";
-    const char* function = context.function ? context.function : "";
-
-    switch(type) {
-        case QtDebugMsg:
-            fprintf(stderr,
-                    "cathaysia.digikam.flowview(Debug): %s (%s:%u, %s)\n",
-                    localMsg.constData(),
-                    file,
-                    context.line,
-                    function);
-            break;
-        case QtInfoMsg:
-            fprintf(stderr,
-                    "cathaysia.digikam.flowview(Info): %s (%s:%u, %s)\n",
-                    localMsg.constData(),
-                    file,
-                    context.line,
-                    function);
-            break;
-        case QtWarningMsg:
-            fprintf(stderr,
-                    "cathaysia.digikam.flowview(Warning): %s (%s:%u, %s)\n",
-                    localMsg.constData(),
-                    file,
-                    context.line,
-                    function);
-            break;
-        case QtCriticalMsg:
-            fprintf(stderr,
-                    "cathaysia.digikam.flowview(Critical): %s (%s:%u, %s)\n",
-                    localMsg.constData(),
-                    file,
-                    context.line,
-                    function);
-            break;
-        case QtFatalMsg:
-            fprintf(stderr,
-                    "cathaysia.digikam.flowview(Fatal): %s (%s:%u, %s)\n",
-                    localMsg.constData(),
-                    file,
-                    context.line,
-                    function);
-            break;
-    }
-}
-
 FlowPlugin::FlowPlugin(QObject* const parent) : DPluginGeneric(parent), iface_(nullptr), settings_(nullptr) {
     settings_ = new PlugSettings(nullptr);
     settings_->setPlugin(this);
-
-    qInstallMessageHandler(logHandler);
 }
 
 FlowPlugin::~FlowPlugin() noexcept {
@@ -94,7 +45,6 @@ QString FlowPlugin::iid() const {
 
 QIcon FlowPlugin::icon() const {
     return QIcon::fromTheme(QLatin1String("digikam"));
-#include <functional>
 }
 
 QString FlowPlugin::description() const {
@@ -150,7 +100,7 @@ void FlowPlugin::flowView() {
     dialog->show();
 
     auto items = iface_->currentAlbumItems();
-    qDebug() << "These images will be loaded: " << items;
+    qCDebug(DIGIKAM_DPLUGIN_GENERIC_LOG) << "These images will be loaded: " << items;
     for(auto& it: items) dialog->load(it, settings_->useCustomLoader());
 }
 
