/* ============================================================
 *
 * This file is a part of digiKam project
 * https://www.digikam.org
 *
 * Date        : 2010-06-16
 * Description : Wrapper for OpenCV header files
 *
 * SPDX-FileCopyrightText: 2012-2022 by Gilles Caulier <caulier dot gilles at gmail dot com>
 *
 * SPDX-License-Identifier: GPL-2.0-or-later
 *
 * ============================================================ */

#ifndef DIGIKAM_OPEN_CV_H
#define DIGIKAM_OPEN_CV_H

// Pragma directives to reduce warnings from OpenCV header files.
#if !defined(__APPLE__) && defined(__GNUC__)
#   pragma GCC diagnostic push
#   pragma GCC diagnostic ignored "-Wnon-virtual-dtor"
#   pragma GCC diagnostic ignored "-Woverloaded-virtual"
#   pragma GCC diagnostic ignored "-Wcast-align"
#endif

#if defined(__APPLE__) && defined(__clang__)
#   pragma clang diagnostic push
#   pragma clang diagnostic ignored "-Wnon-virtual-dtor"
#   pragma clang diagnostic ignored "-Woverloaded-virtual"
#   pragma clang diagnostic ignored "-Wcast-align"
#endif

// Used to find shared Haar Cascade files.
#define OPENCV_ROOT_PATH "${OpenCV_DIR}"

// OpenCV includes

#include <opencv2/core/version.hpp>

#define OPENCV_MAKE_VERSION(major,minor,patch) (((major) << 16) | ((minor) << 8) | (patch))
#define OPENCV_VERSION                         OPENCV_MAKE_VERSION(CV_MAJOR_VERSION,CV_MINOR_VERSION,CV_SUBMINOR_VERSION)
#define OPENCV_TEST_VERSION(major,minor,patch) ( OPENCV_VERSION < OPENCV_MAKE_VERSION(major,minor,patch) )

// Core module headers

#include <opencv2/core.hpp>
#include <opencv2/core/utility.hpp>
#include <opencv2/core/persistence.hpp>
#include <opencv2/core/core_c.h>
#include <opencv2/core/types_c.h>
#include <opencv2/core/ocl.hpp>

// Image codecs module headers

#include <opencv2/imgcodecs.hpp>

#if OPENCV_TEST_VERSION(4,0,0)
#   include <opencv2/imgcodecs/imgcodecs_c.h>
#endif

// Image processing module headers

#include <opencv2/imgproc.hpp>
#include <opencv2/imgproc/types_c.h>

// Shape detection/recognition module headers

#include <opencv2/objdetect.hpp>
#include <opencv2/flann.hpp>
#include <opencv2/dnn.hpp>
#include <opencv2/ml.hpp>

// Restore warnings
#if !defined(__APPLE__) && defined(__GNUC__)
#   pragma GCC diagnostic pop
#endif

#if defined(__APPLE__) && defined(__clang__)
#   pragma clang diagnostic pop
#endif

#endif // DIGIKAM_OPEN_CV_H
